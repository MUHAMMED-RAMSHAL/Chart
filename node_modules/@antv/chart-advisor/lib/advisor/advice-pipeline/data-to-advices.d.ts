import type { ChartKnowledgeJSON } from '@antv/ckb';
import type { Advice, AdvicesWithLog, DataRows } from '../../types';
import type { BasicDataPropertyForAdvice, RuleModule } from '../../ruler/interface';
import type { AdvisorOptions, SmartColorOptions } from './interface';
/**
 * options for advising inner pipeline
 * @todo refactor since 3.0.0
 */
declare type PipeAdvisorOptions = AdvisorOptions & {
    exportLog?: boolean;
};
/**
 * recommending charts given data and dataProps, based on CKB and RuleBase
 *
 * @param data input data [ {a: xxx, b: xxx}, ... ]
 * @param dataProps data props derived from data-wizard or customized by users
 * @param chartWIKI ckb
 * @param ruleBase rule base
 * @param smartColor switch smart color on/off, optional props, default is off
 * @param options options for advising such as log, preferences
 * @param colorOptions color options, optional props, @see {@link SmartColorOptions}
 * @returns chart list [ { type: chartTypes, spec: antv-spec, score: >0 }, ... ]
 */
export declare function dataToAdvices(data: DataRows, dataProps: BasicDataPropertyForAdvice[], chartWIKI: Record<string, ChartKnowledgeJSON>, ruleBase: Record<string, RuleModule>, smartColor?: boolean, options?: PipeAdvisorOptions, colorOptions?: SmartColorOptions): Advice[] | AdvicesWithLog;
export {};
