!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("antd"),require("antd/es/locale/zh_CN"),require("antd/es/locale/en_US"),require("@antv/chart-advisor"),require("@antv/antv-spec"),require("@antv/g2plot"),require("@antv/ckb"),require("@antv/thumbnails-component"),require("react-dom"),require("@ant-design/icons"),require("@antv/data-wizard"),require("date-fns"),require("moment")):"function"==typeof define&&define.amd?define(["exports","react","antd","antd/es/locale/zh_CN","antd/es/locale/en_US","@antv/chart-advisor","@antv/antv-spec","@antv/g2plot","@antv/ckb","@antv/thumbnails-component","react-dom","@ant-design/icons","@antv/data-wizard","date-fns","moment"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).AutoChart={},e.React,e.antd,e.zhCN,e.enUS,e.chartAdvisor,e.antvSpec,e.G2Plot,e.ckb,e.thumbnailsComponent,e.ReactDOM,e.icons,e.dataWizard,e.dateFns,e.moment)}(this,(function(e,t,a,n,r,i,l,u,o,c,s,d,m,f,p){"use strict";function y(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function g(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,n.get?n:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var h=y(t),v=y(n),b=y(r),E=g(u),C=y(p),S=function(){return S=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},S.apply(this,arguments)};function F(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),l=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)l.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}return l}function x(e,t,a){if(a||2===arguments.length)for(var n,r=0,i=t.length;r<i;r++)!n&&r in t||(n||(n=Array.prototype.slice.call(t,0,r)),n[r]=t[r]);return e.concat(n||Array.prototype.slice.call(t))}var _="__AUTO_CHART__",M=["kpi_panel","table"];var N=function(e){var a=e.title,n=e.description,r=e.spec,i=e.chartRef,u=e.mockConfig,o=t.useRef(null),c=F(t.useState(null),2),s=c[0],d=c[1],m=F(t.useState(null),2),f=m[0],p=m[1];return t.useEffect((function(){if(r){var e=l.specToG2Plot(r,o.current);p(e),d(e.constructor.name)}}),[r]),t.useEffect((function(){if(u){f&&f.destroy();var e=new E[u.config.type](o.current,S(S({},u.config.configs),{data:u.data}));e.render(),p(e),d(e.constructor.name)}}),[u]),t.useEffect((function(){null===r&&null===u&&(d(null),f&&f.destroy(),p(null))}),[r,u]),t.useImperativeHandle(i,(function(){return{chartType:s,plot:f}})),h.default.createElement("div",{className:_+"canvas-layer"},a&&h.default.createElement("div",{className:"canvas-title"},a),n&&h.default.createElement("div",{className:"canvas-description"},n),h.default.createElement("div",{className:"canvas-content"},h.default.createElement("div",{className:"feedback-layer",ref:o})))},w={"zh-CN":{NoRecommendation:"暂无推荐",ChartConfig:"图表配置",NoData:"暂无数据",NOSupportTemporarily:"数据量过大暂不支持绘制",Initialize:"初始化",Score:"推荐分",Total:"总计",CopyConfig:"拷贝配置",CopySuccess:"拷贝成功",CopyData:"拷贝数据","Please Initialize Data Again":"请重新初始化数据","Copy Config":"拷贝配置","Copy Success ":"拷贝成功","Copy Data":"拷贝数据",Configure:"去配置","Are you sure to delete row?":"确认删除该列吗？","Apply data":"应用数据","Select Chart":"选择图表","Mock Data":"Mock数据",Rows:"行数","Display up to 100 items":"最多显示 100 行",Settings:"设置","Field Name":"字段名称","Field Type":"字段类型","Please input field name":"请填写字段名称","Please select field type":"请选择字段类型",date:"日期",enum:"枚举",number:"数字","Start Time":"开始日期","Start time is required":"开始日期必填","End Time":"结束时间","End time is required":"结束日期必填","End time must be bigger than Start Time":"结束时间必须大于开始时间","Time Span":"时间间隔","s:second m:minute h:hour d:day e.g.5m":"s:秒 m:分 h:小时 d:天 例如: 5m","Time span is required":"时间间隔必填","Time Span Format is wrong":"时间间隔格式不正确","Max number must be bigger than Small number":"最大值必须大于最小值",Format:"格式","Format is wrong":"格式不正确","y: year M:month d:day H:hour m:minute s:second e.g.yyyy/MM/dd":"y: 年 M:月 d:天 H:时 m:分 s:秒 例如: yyyy/MM/dd","Time format is required":"日期格式必填",Enumeration:"枚举值",'split with ","':"使用,(英文)分隔","Enumeration is required":"枚举值不能为空",Distribution:"重复方式","Distribution is required":"分布不能为空",cartesian:"组合",random:"随机",sequential:"循环",Minimum:"最小值","Minimum is required":"最小值必填",Maximum:"最大值","Maximum is required":"最大值必填",Precision:"精度","Precision is required":"数值精度必填"},"en-US":{NoRecommendation:"No Recommendation",ChartConfig:"Chart Config",NoData:"No Data",NOSupportTemporarily:"The data is too big to support temporarily",Initialize:"Initialize",Score:"Score",Total:"Total",CopyConfig:"Copy Config",CopySuccess:"Copy Success",CopyData:"CopyData","Please Initialize Data Again":"Please Initialize Data Again","Copy Config":"Copy Config","Copy Success ":"Copy Success","Copy Data":"Copy Data",Configure:"Configure","Are you sure to delete row?":"Are you sure to delete row?","Apply data":"Apply data","Select Chart":"Select Chart","Mock Data":"Mock Data",Rows:"Rows","Display up to 100 items":"Display up to 100 items",Settings:"Settings","Field Name":"Field Name","Field Type":"Field Type","Please input field name":"Please input field name","Please select field type":"Please select field type",date:"date",enum:"enum",number:"number","Start Time":"Start Time","Start time is required":"Start time is required","End Time":"End Time","End time is required":"End time is required","End time must be bigger than Start Time":"End time must be bigger than Start Time","Time Span":"Time Span","Time Span Format is wrong":"Time Span Format is wrong","s:second m:minute h:hour d:day e.g.5m":"s:second m:minute h:hour d:day e.g.5m","Time span is required":"Time span is required",Format:"Format","Format is wrong":"Format is wrong","y: year M:month d:day H:hour m:minute s:second e.g.yyyy/MM/dd":"y: year M:month d:day H:hour m:minute s:second e.g.yyyy/MM/dd","Time format is required":"Time format is required","Max number must be bigger than Small number":"Max number must be bigger than Small number",Enumeration:"Enumeration",'split with ","':'split with ","',"Enumeration is required":"Enumeration is required",Distribution:"Distribution","Distribution is required":"Distribution is required",cartesian:"cartesian",random:"random",sequential:"sequential",Minimum:"Minimum","Minimum is required":"Minimum is required",Maximum:"Maximum","Maximum is required":"Maximum is required",Precision:"Precision","Precision is required":"Precision is required"}},k=function(e,t){return w[t||"zh-CN"][e]},q=function(e){var a=e.advices,n=e.currentIndex,r=e.language,i=e.isActive,l=e.onChartTypeChange,u=F(t.useState(!1),2),s=u[0],d=u[1],m=o.CKBJson(r,!0),f=a.filter((function(e){return!M.includes(e.type)})).slice(0,3),p=["https://gw.alipayobjects.com/zos/antfincdn/61FtDvdTVl/no1.png","https://gw.alipayobjects.com/zos/antfincdn/Y7AsvjRWNF/no2.png","https://gw.alipayobjects.com/zos/antfincdn/2%24ruKwktmY/no3.png"];return t.useEffect((function(){!1===i&&!0===s&&d(!1)}),[i]),h.default.createElement("div",{className:_+"toolbar"},h.default.createElement("div",{className:_+"config_btn",style:{display:i?"block":"none"},onClick:function(){return d(!s)}},h.default.createElement("img",{src:"https://gw.alipayobjects.com/zos/antfincdn/krFnwF2VZi/retweet.png",alt:""})),h.default.createElement("div",{className:_+"advice_container",style:{display:s?"block":"none"}},h.default.createElement("div",{className:_+"advice_content"},f.map((function(e,t){return h.default.createElement("div",{className:_+"advice",key:t,onClick:function(){return function(e){n!==e&&l(e)}(t)}},h.default.createElement("div",{className:_+"advice-thumbnail","data-index":t},h.default.createElement(c.Thumbnail,{chart:e.type,"data-index":t})),h.default.createElement("div",{className:_+"advice-desc"},h.default.createElement("img",{src:p[t],"data-index":t}),h.default.createElement("div",{className:"advice-chart-name","data-index":t},m[e.type].name),h.default.createElement("div",{className:"advice-score-text","data-index":t},k("Score",r),h.default.createElement("span",{className:"advice-score"},e.score.toFixed(2)))))}))),h.default.createElement("div",{className:_+"advice_arrow"})))},T=function(e){var t=e.language,a=e.noDataContent,n=e.onOpenMock;return h.default.createElement("div",{className:_+"no-data-layer"},h.default.createElement("div",{className:_+"mock_guide"},a||h.default.createElement("div",null,h.default.createElement("div",{style:{marginBottom:16}},h.default.createElement("img",{src:"https://gw.alipayobjects.com/zos/basement_prod/9a59280d-8f23-4234-b5cf-02956a91b6ff.svg",alt:""})),h.default.createElement("div",null,k("NoData",t))),h.default.createElement("div",{className:_+"mock_guide_button",onClick:n},k("Initialize",t))))},D=new m.random.Random,z={s:1e3,m:6e4,h:36e5,d:864e5};function P(e,t,a,n){if("string"!=typeof a&&"number"!=typeof a)throw new TypeError("xxx");if("string"==typeof a){if(!/(\d+)(s|m|h|d)/.test(a))throw new TypeError("xxx");a=z[RegExp.$2]*Number.parseFloat(RegExp.$1)}if("number"==typeof a&&(0===a||Number.isNaN(a)))throw new TypeError("xxxx");return"string"==typeof e&&(e=new Date(e).getTime()),"string"==typeof t&&(t=new Date(t).getTime()),function(e,t,a){for(var n=0,r=[];;){var i=e+n*a;if(i>t)break;r.push(i),n+=1}return r}(e,t,a).map((function(e){return f.format(e,n)}))}function I(e,t){for(var a=1,n=t+1;n<e.length;n+=1){var r=e[n];if(r&&"enum"===r.type&&"cartesian"===r.distribution&&r.values&&r.values.length&&(a*=r.values.length||1),"date"===r.type){var i=r,l=P(i.start,i.end,i.step,i.format);l&&l.length&&(a*=l.length)}}return a}var O=[{type:"date",start:"2019-01-01",end:"2019-01-10",step:"1d",format:"yyyy/MM/dd",name:"date"},{type:"enum",values:["Shanghai","London"],distribution:"cartesian",name:"city"},{type:"number",name:"count",min:0,max:1e3,decimals:0}];function H(e,t){var a=e.map((function(t,a){if("number"===t.type){var n=t,r=n.min,i=void 0===r?0:r,l=n.max,u=void 0===l?1e3:l,o=n.decimals,c=void 0===o?0:o;return function(){return D.float({min:i,max:u,fixed:c})}}if("enum"===t.type){var s=t,d=s.values,m=s.distribution;return function(t){if("cartesian"===m){var n=I(e,a);return d[Math.floor(t/n)%d.length]}return"sequential"===m?d[t%d.length]:D.pickone(d)}}if("date"===t.type){var f=t,p=P(f.start,f.end,f.step,f.format),y=I(e,a);return function(e){return p[Math.floor(e/y)%p.length]}}return null}));return new Array(t).fill(void 0).map((function(t,n){var r={};return a.forEach((function(t,a){r[e[a].name]=t(n)})),r}))}var R,j,A=H([{name:"date",type:"date",start:"2019/03/01",end:"2019/03/10",step:"1d",format:"yyyy/MM/dd"},{name:"value",type:"number",min:0,max:1e3},{name:"city",type:"enum",values:["Paris","London","New York"],distribution:"cartesian"}],30),B=H([{name:"date",type:"date",start:"2019/03/01",end:"2019/03/10",step:"1d",format:"yyyy/MM/dd"},{name:"value",type:"number",min:0,max:1e3}],10),Y=H([{name:"type",values:["Shanghai","Chengdu","Hangzhou","Shenzhen"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:1e3}],4),V=H([{name:"city",values:["Shanghai","Chengdu","Hangzhou","Shenzhen","Hong Kong","Beijing","Chongqing"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:1e3}],7),K=H([{name:"city",values:["Shanghai","Chengdu","Hangzhou","Shenzhen","Hong Kong","Beijing","Chongqing"],type:"enum",distribution:"cartesian"},{name:"gender",values:["male","female"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:1e3}],14),L=H([{name:"city",values:["Shanghai","Chengdu","Hangzhou","Shenzhen","Hong Kong","Beijing","Chongqing"],type:"enum",distribution:"cartesian"},{name:"type",values:["category1","category2","category3"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:1e3}],21),W=H([{name:"type",values:["defense","attack","speed","penetration","armor","critical"],type:"enum",distribution:"cartesian"},{name:"name",values:["Sun Shangxiang","Huang Zhong"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:100}],12),G=H([{name:"value",type:"number",min:0,max:100}],60),U={line_chart:{data:A,configs:{xField:"date",yField:"value",seriesField:"city"},type:"Line"},stacked_area_chart:{data:A,configs:{xField:"date",yField:"value",seriesField:"city",isStack:!0},type:"Area"},pie_chart:{data:Y,configs:{angleField:"value",colorField:"type"},type:"Pie"},donut_chart:{data:Y,configs:{angleField:"value",colorField:"type",innerRadius:.64,statistic:{title:{offsetY:-18,style:{fontSize:16}},content:{offsetY:8,style:{fontSize:24}}}},type:"Pie"},area_chart:{data:B,configs:{xField:"date",yField:"value"},type:"Area"},column_chart:{data:V,configs:{xField:"city",yField:"value"},type:"Column"},grouped_column_chart:{data:K,configs:{xField:"city",yField:"value",seriesField:"gender",isGroup:!0},type:"Column"},stacked_column_chart:{data:K,configs:{xField:"city",yField:"value",seriesField:"gender",isStack:!0},type:"Column"},percent_stacked_column_chart:{data:L,configs:{xField:"city",yField:"value",seriesField:"type",isStack:!0,isPercent:!0},type:"Column"},bar_chart:{data:V,configs:{xField:"value",yField:"city"},type:"Bar"},grouped_bar_chart:{data:K,configs:{xField:"value",yField:"city",seriesField:"gender",isGroup:!0},type:"Bar"},stacked_bar_chart:{data:K,configs:{xField:"value",yField:"city",seriesField:"gender",isStack:!0},type:"Bar"},percent_stacked_bar_chart:{data:L,configs:{xField:"value",yField:"city",seriesField:"type",isStack:!0,isPercent:!0},type:"Bar"},scatter_plot:{data:H([{name:"city",values:["Shanghai","Chengdu","Hangzhou"],type:"enum",distribution:"random"},{name:"count",type:"number",min:0,max:1e3},{name:"value",type:"number",min:0,max:1e3}],1e3),configs:{xField:"value",yField:"count",colorField:"city",shape:"circle"},type:"Scatter"},bubble_chart:{data:H([{name:"city",values:["Shanghai","Chengdu"],type:"enum",distribution:"random"},{name:"count",type:"number",min:0,max:1e3},{name:"value",type:"number",min:0,max:1e3},{name:"size",type:"number",min:0,max:1e3}],100),configs:{xField:"value",yField:"count",sizeField:"size",colorField:"city",size:[2,16],shape:"circle"},type:"Scatter"},radar_chart:{data:W,configs:{xField:"type",yField:"value",seriesField:"name"},type:"Radar"},histogram:{data:G,configs:{binField:"value",binWidth:4},type:"Histogram"},heatmap:{data:H([{name:"city",values:["Shanghai","Chengdu","Hangzhou","Shenzhen","Hong Kong","Beijing","Chongqing"],type:"enum",distribution:"cartesian"},{name:"type",values:["category1","category2","category3","category4","category5","category6","category7","category8"],type:"enum",distribution:"cartesian"},{name:"value",type:"number",min:0,max:100}],56),configs:{xField:"type",yField:"city",colorField:"value"},type:"Heatmap"}},$=["line_chart","area_chart","bar_chart","grouped_bar_chart","stacked_bar_chart","percent_stacked_bar_chart","column_chart","grouped_column_chart","stacked_column_chart","percent_stacked_column_chart","stacked_area_chart","pie_chart","donut_chart","radar_chart","scatter_plot","bubble_chart","histogram","heatmap"],J=function(e){var t=e.language,a=e.chartType,n=o.CKBJson(t,!0);return h.default.createElement("div",{className:_+"mockchart-container"},$.map((function(t){return h.default.createElement("div",{key:t,className:"chart-item"+(a===t?" active":"")},h.default.createElement("div",{className:"chart"},h.default.createElement(c.Thumbnail,{chart:t,onClick:function(){return e.onMockChartTypeChange(t)}})),h.default.createElement("div",null,n[t].name))})))},X=a.Select.Option,Z={labelCol:{span:6},wrapperCol:{span:18}},Q=function(e){var n=e.language,r=e.value,i=F(t.useState((null==r?void 0:r.type)||""),2),l=i[0],u=i[1],o=F(a.Form.useForm(),1)[0],c=function(e){return k(e,n)};return h.default.createElement(a.Modal,{style:{top:10},title:k("Settings",n),visible:!0,onOk:function(){o.validateFields().then((function(t){var a=S({},t);if("enum"===l){var n=t.values.split(",").filter((function(e){return e.trim().length>0}));a.values=n}"date"===l&&(a.start=C.default(t.start).format("YYYY-MM-DD HH:mm:ss"),a.end=C.default(t.end).format("YYYY-MM-DD HH:mm:ss")),e.onOK(a)})).catch((function(e){throw new Error(e)}))},onCancel:e.onCancel},h.default.createElement(a.Form,S({},Z,{form:o}),h.default.createElement(a.Form.Item,{name:"name",rules:[{required:!0,message:c("Please input field name")}],label:c("Field Name"),initialValue:r.name},h.default.createElement(a.Input,null)),h.default.createElement(a.Form.Item,{name:"type",label:c("Field Type"),rules:[{required:!0,message:c("Please select field type")}],initialValue:r.type},h.default.createElement(a.Select,{allowClear:!1,onChange:function(e){return u(e)}},h.default.createElement(X,{value:"date"},c("date")),h.default.createElement(X,{value:"enum"},c("enum")),h.default.createElement(X,{value:"number"},c("number")))),"date"===l&&h.default.createElement(h.default.Fragment,null,h.default.createElement(a.Form.Item,{name:"start",label:c("Start Time"),rules:[{required:!0,message:c("Start time is required")}],initialValue:r.start?C.default(r.start):C.default()},h.default.createElement(a.DatePicker,{showTime:!0})),h.default.createElement(a.Form.Item,{name:"end",label:c("End Time"),rules:[{required:!0,message:c("End time is required")},function(e){var t=e.getFieldValue;return{validator:function(e,a){var n=t("start");return a&&t("start")&&C.default(a).unix()<C.default(n).unix()?Promise.reject(new Error("End time must be bigger than Start Time")):Promise.resolve()}}}],initialValue:r.end?C.default(r.end):C.default()},h.default.createElement(a.DatePicker,{showTime:!0})),h.default.createElement(a.Form.Item,{name:"step",label:c("Time Span"),help:c("s:second m:minute h:hour d:day e.g.5m"),rules:[{required:!0,message:c("Time span is required")},{validator:function(e,t,a){return 0!==parseInt(t,10)&&/^[0-9]+[smhd]$/.test(t)?a():a("Time Span Format is wrong")}}],initialValue:r.step||"1d"},h.default.createElement(a.Input,null)),h.default.createElement(a.Form.Item,{name:"format",label:c("Format"),help:c("y: year M:month d:day H:hour m:minute s:second e.g.yyyy/MM/dd"),rules:[{required:!0,message:c("Time format is required")},{validator:function(e,t,a){var n="[^yYMmDdHhMmSs]",r="$|"+n+"$|"+n;return new RegExp("^yyyy("+r+"MM("+r+"dd("+r+" HH("+r+"mm("+r+"ss)))))").test(t)?a():a("Format is wrong")}}],initialValue:r.format||"yyyy/MM/dd"},h.default.createElement(a.Input,null))),"enum"===l&&h.default.createElement(h.default.Fragment,null,h.default.createElement(a.Form.Item,{name:"values",label:c("Enumeration"),help:c('split with ","'),rules:[{required:!0,message:c("Enumeration is required")},{validator:function(e,t,a){return t&&/,,/.test(t)?a("Time Span Format is wrong"):a()}}],initialValue:r.values?r.values.join(","):""},h.default.createElement(a.Input.TextArea,null)),h.default.createElement(a.Form.Item,{name:"distribution",label:c("Distribution"),rules:[{required:!0,message:c("Distribution is required")}],initialValue:r.distribution},h.default.createElement(a.Select,null,h.default.createElement(X,{value:"cartesian"},c("cartesian")),h.default.createElement(X,{value:"random"},c("random")),h.default.createElement(X,{value:"sequential"},c("sequential"))))),"number"===l&&h.default.createElement(h.default.Fragment,null,h.default.createElement(a.Form.Item,{name:"min",label:c("Minimum"),rules:[{required:!0,message:c("Minimum is required")}],initialValue:r.min||0},h.default.createElement(a.InputNumber,null)),h.default.createElement(a.Form.Item,{name:"max",label:c("Maximum"),rules:[{required:!0,message:c("Maximum is required")},function(e){var t=e.getFieldValue;return{validator:function(e,a){return a&&t("min")&&a<=t("min")?Promise.reject(new Error("Max number must be bigger than Small number")):Promise.resolve()}}}],initialValue:r.max||0},h.default.createElement(a.InputNumber,null)),h.default.createElement(a.Form.Item,{name:"decimals",label:c("Precision"),rules:[{required:!0,message:c("Precision is required")}],initialValue:r.decimals||0},h.default.createElement(a.InputNumber,{min:0,step:1})))))},ee=function(e){var n=e.language,r=e.onFieldDataChange,i=e.customizeData,l=F(t.useState(null),2),u=l[0],o=l[1],c=F(t.useState(O),2),s=c[0],m=c[1],f=F(t.useState(e.count||20),2),p=f[0],y=f[1],g=function(e){var t,a=(t=e).every((function(e){return"number"===e.type}))?NaN:I(t,-1),n=Number.isNaN(a)?p:a,i=H(e,n);o(null),y(n),m(e),r(i)},v=function(e){o(e)};t.useEffect((function(){var t=H(s,e.count);y(e.count),r(x([],F(t)))}),[e.count]);return h.default.createElement("div",{className:_+"mockdata-container"},h.default.createElement(a.Table,{rowKey:"__uuid",scroll:{y:360},dataSource:i.slice(0,100).map((function(e){return S(S({},e),{__uuid:"uuid"+"-xxxx-xxx".replace(/x/g,(function(){return(16*Math.random()).toString(16)}))})})),columns:new Array(4).fill(void 0).map((function(e,t){if(s[t]){var r=s[t].name;return{title:h.default.createElement("span",{className:"table-title"},r,h.default.createElement(d.SettingOutlined,{onClick:function(){return v(t)}}),h.default.createElement(a.Popconfirm,{title:k("Are you sure to delete row?",n),onConfirm:function(){return function(e){var t=x([],F(s));t.splice(e,1),g(t)}(t)}},h.default.createElement(d.DeleteOutlined,null))),key:"col-"+(t+1),width:"25%",dataIndex:r}}return{title:h.default.createElement("span",{className:"table-title"},"--",h.default.createElement(d.SettingOutlined,{onClick:function(){return v(t)}})),key:"col-"+(t+1),width:"25%",render:function(){return"--"}}})),pagination:!1}),null!==u&&h.default.createElement(Q,{value:s[u]||{name:"",type:null},onOK:function(e){var t=x([],F(s));t.splice(u,1,e),g(t)},language:n,onCancel:function(){return o(null)}}))},te=function(e){var n=e.language,r=F(t.useState("chart"),2),i=r[0],l=r[1],u=F(t.useState(null),2),o=u[0],c=u[1],s=F(t.useState(20),2),m=s[0],f=s[1],p=F(t.useState(H(O,20)),2),y=p[0],g=p[1],v=function(){if("chart"===i&&o){var t=U[o],a=t.data,n=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(n=Object.getOwnPropertySymbols(e);r<n.length;r++)t.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(e,n[r])&&(a[n[r]]=e[n[r]])}return a}(t,["data"]),r=S(S({},n),{chartType:o});e.onMockDataChange({result:{config:r,data:a}})}else"data"===i&&e.onMockDataChange({result:{data:x([],F(y))}})};return h.default.createElement(h.default.Fragment,null,h.default.createElement("div",{className:_+"config_content"},h.default.createElement(a.Tabs,{tabBarGutter:25,tabBarStyle:{paddingLeft:20},activeKey:i,onChange:l},h.default.createElement(a.Tabs.TabPane,{tab:k("Select Chart",n),key:"chart"}),h.default.createElement(a.Tabs.TabPane,{tab:k("Mock Data",n),key:"data"})),"chart"===i&&h.default.createElement(J,{language:n,chartType:o,onMockChartTypeChange:function(e){c(e)}}),"data"===i&&h.default.createElement(ee,{language:n,count:m,customizeData:y,onFieldDataChange:g})),h.default.createElement("div",{className:_+"config_footer"},"chart"===i&&h.default.createElement("div",{className:_+"config_chart_footer"},h.default.createElement(a.Button,{disabled:!o,type:"primary",onClick:v},k("Configure",n))),"data"===i&&h.default.createElement("div",{className:_+"config_data_footer"},h.default.createElement("div",null,h.default.createElement(a.Tooltip,{title:k("Display up to 100 items",n)},k("Rows"),h.default.createElement(d.InfoCircleOutlined,{className:_+"number_tip"})),h.default.createElement(a.InputNumber,{onChange:function(e){return f(e)},value:m,min:0,step:1})),h.default.createElement(a.Button,{type:"primary",onClick:v},k("Apply data",n)))))},ae=t.forwardRef((function(e,a){var n=e.language,r=e.mockDisplay,i=void 0!==r&&r,l=e.containerRef,u=e.onMockDataChange,o=t.useRef(null),c=t.useRef(null);return t.useEffect((function(){if(i){if(l){var e=function(e,t){var a=e.offsetLeft,n=e.offsetTop,r=e.offsetWidth,i=e.offsetHeight,l=t.offsetWidth,u=t.offsetHeight,o=document.body.clientWidth,c=document.body.clientHeight,s=a+r/2,d=a-l+r/2,m=n+i/2,f=n-u+i/2;return{left:(s+l>o?d<0?o-l:d:s)+"px",top:(m+u>c?f<0?c-u:f:m)+"px"}}(l.current,o.current);o.current.style.left=e.left,o.current.style.top=e.top}o.current.style.display="block"}!i&&o&&(o.current.style.display="none")}),[i]),t.useImperativeHandle(a,(function(){return{dragContainer:o.current,dragHandler:c.current}})),h.default.createElement("div",{className:_+"dev_panel",style:{width:600,height:604},ref:o},h.default.createElement("div",{className:_+"config_panel"},h.default.createElement("div",{className:_+"config_header",ref:c},k("Initialize",n),h.default.createElement("img",{src:"https://gw.alipayobjects.com/zos/antfincdn/5mKWpRQ053/close.png",onClick:function(){e.onClose()}})),h.default.createElement(te,{language:n,onMockDataChange:u})))})),ne=((j=function(e){var a=t.useRef(null);return t.useEffect((function(){if(a){var e=a.current,t=e.dragContainer,n=e.dragHandler;r=t,l=[],(i=n).onmousedown=function(e){var t=e.clientX-i.getBoundingClientRect().left,a=e.clientY-i.getBoundingClientRect().top;function n(e,n){r.style.left=e-t+"px",r.style.top=n-a+"px"}function u(e){n(e.pageX,e.pageY)}n(e.pageX,e.pageY),l.push(u),document.addEventListener("mousemove",u),i.onmouseup=function(){l.forEach((function(e){document.removeEventListener("mousemove",e)})),r.onmouseup=null}},i.ondragstart=function(){return!1}}var r,i,l}),[a]),s.createPortal(h.default.createElement(R,S({},e,{ref:a})),document.body)}).displayName="withDrag("+((R=ae).displayName||R.name)+")",j);e.AutoChart=function(e){var n,r=e.data,l=void 0===r?[]:r,u=e.width,o=void 0===u?"100%":u,c=e.height,s=void 0===c?"100%":c,d=e.language,m=void 0===d?"zh-CN":d,f=e.noDataContent,p=void 0===f?null:f,y=e.className,g=e.title,E=e.description,C=e.showRanking,S=void 0===C||C,M=t.useRef(null),w=t.useRef(null),D=new i.Advisor,z=F(t.useState([]),2),P=z[0],I=z[1],O=F(t.useState(0),2),H=O[0],R=O[1],j=F(t.useState(l||[]),2),A=j[0],B=j[1],Y=F(t.useState(null),2),V=Y[0],K=Y[1],L=F(t.useState(null),2),W=L[0],G=L[1],U=F(t.useState(!1),2),$=U[0],J=U[1],X=F(t.useState(!1),2),Z=X[0],Q=X[1];t.useEffect((function(){M&&(M.current.style.width=o+"px",M.current.style.height=s+"px")}),[o,s]),t.useEffect((function(){I([]),B(l)}),[JSON.stringify(l)]),t.useEffect((function(){if(A.length>0){var e=D.advise({data:A});I(e),R(0)}}),[A]);return h.default.createElement(a.ConfigProvider,{locale:"zh-CN"===m?v.default:b.default},h.default.createElement("div",{className:_+"container "+(y||""),ref:M,onMouseOver:function(){return J(!0)},onMouseLeave:function(){return J(!1)}},(A.length>0||V)&&h.default.createElement(N,{title:g,description:E,chartRef:w,spec:(null===(n=P[H])||void 0===n?void 0:n.spec)||null,mockConfig:W}),S&&A.length>0&&P.length>0&&h.default.createElement(q,{language:m,advices:P,currentIndex:H,isActive:$,onChartTypeChange:function(e){R(e)}}),0===A.length&&!V&&h.default.createElement(T,{language:m,noDataContent:p,onOpenMock:function(){return Q(!0)}}),h.default.createElement(ne,{mockDisplay:Z,language:m,containerRef:M,onClose:function(){return Q(!1)},onMockDataChange:function(e){var t=e.result;if(Q(!1),t.config)return G(t),void K("Chart");t.data&&(D.advise({data:t.data}).length>0?B(x([],F(t.data))):a.message.error(k("Please Initialize Data Again",m)))}})))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
