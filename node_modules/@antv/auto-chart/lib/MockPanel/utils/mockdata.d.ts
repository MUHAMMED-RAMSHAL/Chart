export interface ValuesField {
    type: 'enum';
    name: string;
    distribution: 'random' | 'sequential' | 'cartesian';
    values: string[];
}
export interface DateField {
    type: 'date';
    name: string;
    start: string;
    end: string;
    step: string;
    format: string;
}
export interface NumberField {
    type: 'number';
    name: string;
    min: number;
    max: number;
    decimals: number;
}
export interface DefaultField {
    type: string;
    name: string;
}
export declare type Field = ValuesField | DateField | NumberField | DefaultField;
export declare const mockFields: Field[];
export declare function getOptimalCount(fields: Field[]): number;
export declare function mock(fields: Field[], count: number): any[];
