import { __extends } from "tslib";
import { BasicRandom } from './basic-random';
import { TextRandom } from './text-random';
import { WebRandom } from './web-random';
import { LocationRandom } from './location-random';
import { DateTimeRandom } from './datetime-random';
import { AddressRandom } from './address-random';
import { getAllDB } from './database';
import { ColorRandom } from './color-random';
/**
 * Random constructor
 * @public
 */
var Random = /** @class */ (function (_super) {
    __extends(Random, _super);
    function Random() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.database = getAllDB();
        return _this;
    }
    return Random;
}(BasicRandom));
export { Random };
(function applyMixins(derivedCtor, baseCtors) {
    baseCtors.forEach(function (baseCtor) {
        Object.getOwnPropertyNames(baseCtor.prototype).forEach(function (name) {
            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));
        });
    });
})(Random, [TextRandom, WebRandom, ColorRandom, LocationRandom, DateTimeRandom, AddressRandom]);
